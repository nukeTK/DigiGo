/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ModuleManager,
  ModuleManagerInterface,
} from "../../../../../@gnosis.pm/safe-contracts/contracts/base/ModuleManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "DisabledModule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "EnabledModule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ExecutionFromModuleFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ExecutionFromModuleSuccess",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "disableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "enableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModuleReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "start",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "getModulesPaginated",
    outputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "next",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "isModuleEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657610c6a908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081632d9ad53d1461008e57508063468721a7146100855780635229073f1461007c578063610b592514610073578063cc2f84521461006a5763e009cfde1461006257600080fd5b61000e610779565b5061000e61060b565b5061000e610378565b5061000e6102da565b5061000e6102b3565b3461010d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010d5773ffffffffffffffffffffffffffffffffffffffff806100db610110565b1691826001141592836100f5575b83151560805260206080f35b604092935081528060205220541615158180806100e9565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff8211176101ca57604052565b6101d2610156565b604052565b60643590600282101561000e57565b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261000e57610218610110565b916024359167ffffffffffffffff60443581811161000e578260238201121561000e5780600401359182116102a6575b61027960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610186565b928284526024838301011161000e57816000926024602093018386013783010152906102a36101d7565b90565b6102ae610156565b610248565b503461000e5760206102d06102c7366101e6565b929190916109a7565b6040519015158152f35b503461000e576102ec6102c7366101e6565b604051602091823d8301016040523d82523d60008484013e6040519283911515825260408183015282519283604084015260005b848110610361575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000606080968601015201168101030190f35b818101830151868201606001528593508201610320565b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576103b0610110565b6103b8610bcd565b73ffffffffffffffffffffffffffffffffffffffff8082168015158061058f575b6103e290610942565b60005260006020526040600020541661053157600160009081526020527fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f84409061052c906104d16104677fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d5b5473ffffffffffffffffffffffffffffffffffffffff1690565b6104918373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60016000908152602052610505817fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d610491565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390a1005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533130320000000000000000000000000000000000000000000000000000006044820152fd5b5060018114156103d9565b90929192604082016040835281518091526060830160208093019160005b848282106105e15750505073ffffffffffffffffffffffffffffffffffffffff91509416910152565b845173ffffffffffffffffffffffffffffffffffffffff16845293840193909201916001016105b8565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57610643610110565b6024359061065861065383610b07565b610186565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061068584610b07565b0136602083013760009273ffffffffffffffffffffffffffffffffffffffff8093168452836020526106cf6040852073ffffffffffffffffffffffffffffffffffffffff90541690565b838116801515908161076d575b5080610764575b1561074d5761074161044d8261071b610747946107008a89610b2e565b9073ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b94610b71565b936106cf565b828581526107606040519283928361059a565b0390f35b508185106106e3565b600191501415386106dc565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576107b1610110565b6107b9610133565b906107c2610bcd565b73ffffffffffffffffffffffffffffffffffffffff8083169081151580610937575b6107ed90610942565b808316600052600060205260406000205416036108d9578161088461052c9261049161085d61044d7faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace40542769773ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9173ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6105056108b18273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b7fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533130330000000000000000000000000000000000000000000000000000006044820152fd5b5060018214156107e4565b1561094957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533130310000000000000000000000000000000000000000000000000000006044820152fd5b91929092600133141580610a7b575b15610a1d576109c6935a93610aa8565b9081156109f557337f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8600080a2565b337facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd375600080a2565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533130340000000000000000000000000000000000000000000000000000006044820152fd5b5033600052600060205273ffffffffffffffffffffffffffffffffffffffff6040600020541615156109b6565b9390936002841015610ad8576000948594600103610acc575060208351930191f490565b9060208451940192f190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60209067ffffffffffffffff8111610b21575b60051b0190565b610b29610156565b610b1a565b8051821015610b425760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610b9e5760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b303303610bd657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f47533033310000000000000000000000000000000000000000000000000000006044820152fdfea2646970667358221220026ecc873eb162821ef3cbc84a72d0da22dbde7a60c36c0600c29bd324540e5664736f6c63430008110033";

type ModuleManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ModuleManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ModuleManager__factory extends ContractFactory {
  constructor(...args: ModuleManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ModuleManager> {
    return super.deploy(overrides || {}) as Promise<ModuleManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ModuleManager {
    return super.attach(address) as ModuleManager;
  }
  override connect(signer: Signer): ModuleManager__factory {
    return super.connect(signer) as ModuleManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModuleManagerInterface {
    return new utils.Interface(_abi) as ModuleManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ModuleManager {
    return new Contract(address, _abi, signerOrProvider) as ModuleManager;
  }
}
