/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  LPToken,
  LPTokenInterface,
} from "../../../../../../../@connext/nxtp-contracts/contracts/core/connext/helpers/LPToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461001657611aec908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461126957508063095ea7b31461122157806318160ddd146111e457806323b872dd146110b6578063313ce5671461107c578063395093511461100257806340c10f1914610e305780634cd88b761461089157806370a082311461082f578063715018a61461079157806379cc67901461050a5780638da5cb5b146104b757806395d89b411461039a578063a457c2d714610295578063a9059cbb14610246578063dd62ed3e146101ce5763f2fde38b146100de57600080fd5b346101ca5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ca57610115611395565b9161011e611550565b73ffffffffffffffffffffffffffffffffffffffff8316156101475783610144846115cf565b80f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b50503461024257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610242578060209261020a611395565b6102126113bd565b73ffffffffffffffffffffffffffffffffffffffff91821683526034865283832091168252845220549051908152f35b5080fd5b50503461024257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102425760209061028e610284611395565b60243590336116cb565b5160018152f35b50823461039757827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610397576102cd611395565b918360243592338152603460205281812073ffffffffffffffffffffffffffffffffffffffff861682526020522054908282106103145760208561028e8585038733611941565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b80fd5b50503461024257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024257805190826037546103da8161163c565b808552916001918083169081156104715750600114610414575b505050610406826104109403836113e0565b519182918261132f565b0390f35b9450603785527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae5b8286106104595750505061040682602061041095820101946103f4565b8054602087870181019190915290950194810161043c565b6104109750869350602092506104069491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101946103f4565b50503461024257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102425760209073ffffffffffffffffffffffffffffffffffffffff606554169051908152f35b5082903461024257827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261024257610543611395565b6024359061054f611550565b81156107345773ffffffffffffffffffffffffffffffffffffffff169182156106b157301561065457828452603360205284842054908282106105d157508184957fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef93602093868852603385520381872055816035540360355551908152a380f35b60849060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152fd5b60649060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601e60248201527f4c50546f6b656e3a2063616e6e6f742073656e6420746f20697473656c6600006044820152fd5b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152fd5b60648360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f4c50546f6b656e3a2063616e6e6f74206275726e2030000000000000000000006044820152fd5b833461039757807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610397576107c8611550565b8073ffffffffffffffffffffffffffffffffffffffff6065547fffffffffffffffffffffffff00000000000000000000000000000000000000008116606555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346102425760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610242578060209273ffffffffffffffffffffffffffffffffffffffff610881611395565b1681526033845220549051908152f35b5091903461024257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102425767ffffffffffffffff918335838111610242576108e29036908601611450565b936024358481116101ca576108fa9036908301611450565b9382549460ff8660081c161592838094610e23575b8015610e0c575b15610d895760019684887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008316178755610d5b575b5061096560ff865460081c16610960816114c5565b6114c5565b8751838111610d2f578061097a60365461163c565b99601f9a8b8111610cc1575b506020908b8311600114610c07578892610bfc575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff828a1b9260031b1c1916176036555b8151928311610bd057506109e260375461163c565b878111610b71575b50602096829188918311600114610ab8578592610aad575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82871b9260031b1c1916176037555b610a4460ff835460081c166114c5565b610a4d336115cf565b610a59575b5051908152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff81541690557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498838251848152a138610a52565b015190503880610a02565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe088941691603787527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae92875b818110610b5a57508411610b23575b505050811b01603755610a34565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388080610b15565b8284015185558a9690940193928b01928b01610b06565b603785527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae8880850160051c82019260208610610bc7575b0160051c01905b818110610bbd57506109ea565b8581558701610bb0565b92508192610ba9565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b01519050388061099b565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08b94169160368a527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8928a5b818110610ca957508411610c72575b505050811b016036556109cd565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88460031b161c19169055388080610c64565b8284015185558d969094019360209384019301610c55565b909150603688527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b88b80850160051c82019260208610610d26575b918c91869594930160051c01915b828110610d18575050610986565b8a81558594508c9101610d0a565b92508192610cfc565b6024866041847f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011785553861094b565b60849060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b50303b1580156109165750600160ff881614610916565b50600160ff88161061090f565b5090346101ca57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ca57610e68611395565b9060243591610e75611550565b8215610fa55773ffffffffffffffffffffffffffffffffffffffff16928315610f4957308414610eed57506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92610ed2879560355461168f565b6035558585526033835280852082815401905551908152a380f35b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601e60248201527f4c50546f6b656e3a2063616e6e6f742073656e6420746f20697473656c6600006044820152fd5b602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b60648460208451917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f4c50546f6b656e3a2063616e6e6f74206d696e742030000000000000000000006044820152fd5b50503461024257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102425761028e602092611075611043611395565b913381526034865284812073ffffffffffffffffffffffffffffffffffffffff8416825286528460243591205461168f565b9033611941565b50503461024257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610242576020905160128152f35b508290346102425760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610242576110f0611395565b6110f86113bd565b91846044359473ffffffffffffffffffffffffffffffffffffffff8416815260346020528181203382526020522054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361115e575b60208661028e8787876116cb565b848210611187575091839161117c6020969561028e95033383611941565b919394819350611150565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b50503461024257817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610242576020906035549051908152f35b50503461024257807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102425760209061028e61125f611395565b6024359033611941565b849084346101ca57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ca57826036546112a78161163c565b8085529160019180831690811561047157506001146112d257505050610406826104109403836113e0565b9450603685527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b85b8286106113175750505061040682602061041095820101946103f4565b805460208787018101919091529095019481016112fa565b60208082528251818301819052939260005b858110611381575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006040809697860101520116010190565b818101830151848201604001528201611341565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036113b857565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036113b857565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761142157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b81601f820112156113b85780359067ffffffffffffffff821161142157604051926114a360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601856113e0565b828452602083830101116113b857816000926020809301838601378301015290565b156114cc57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60655416330361157157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6065549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617606555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b90600182811c92168015611685575b602083101461165657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f169161164b565b9190820180921161169c57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8091169182156118bd5716918215611839573083146117db576000828152603360205260408120549180831061175757604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260338652038282205586815220818154019055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4c50546f6b656e3a2063616e6e6f742073656e6420746f20697473656c6600006044820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff809116918215611a3357169182156119af5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260348252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fdfea2646970667358221220d7ef1ec0476f81e95a11f9cae750c3f9cfa3ca7bb506fe1e757882777d3c0ecc64736f6c63430008110033";

type LPTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LPTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LPToken__factory extends ContractFactory {
  constructor(...args: LPTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LPToken> {
    return super.deploy(overrides || {}) as Promise<LPToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LPToken {
    return super.attach(address) as LPToken;
  }
  override connect(signer: Signer): LPToken__factory {
    return super.connect(signer) as LPToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LPTokenInterface {
    return new utils.Interface(_abi) as LPTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LPToken {
    return new Contract(address, _abi, signerOrProvider) as LPToken;
  }
}
