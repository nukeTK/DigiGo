/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SafeProxy4337,
  SafeProxy4337Interface,
} from "../../../../../@account-abstraction/contracts/gnosis/GnosisSafeProxy4337.sol/SafeProxy4337";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "singleton",
        type: "address",
      },
      {
        internalType: "contract EIP4337Manager",
        name: "aaModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
];

const _bytecode =
  "0x6080604090808252346101e0576060816102d2803803809161002182856101e5565b8339810103126101e0576100348161021e565b60208281015190926001600160a01b039182811691908290036101e05761005d8684920161021e565b931690811561019157600080546001600160a01b03191683178155865163aba3c0b560e01b878201908152602482019490945260448082018490529590941660648086019190915284526001600160401b039390929060a081018581118282101761017d5788525183928392905af43d15610174573d928311610160578551926100f0601f8201601f19168701856101e5565b83523d828685013e5b1561010b578451609f90816102338239f35b9290845193849262461bcd60e51b8452806004850152825192836024860152825b84811061014a57505050828201840152601f01601f19168101030190fd5b818101830151888201880152879550820161012c565b634e487b7160e01b82526041600452602482fd5b606092506100f9565b634e487b7160e01b85526041600452602485fd5b855162461bcd60e51b815260048101869052602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b6064820152608490fd5b600080fd5b601f909101601f19168101906001600160401b0382119082101761020857604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101e05756fe6080604052600073ffffffffffffffffffffffffffffffffffffffff815416907fa619486e00000000000000000000000000000000000000000000000000000000813514606257808092368280378136915af43d82803e15605e573d90f35b3d90fd5b6020918152f3fea2646970667358221220d58397bb2232f9863401c0f4eb8231594623a7332e661b6b9e89cb99d3b829bd64736f6c63430008110033";

type SafeProxy4337ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeProxy4337ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeProxy4337__factory extends ContractFactory {
  constructor(...args: SafeProxy4337ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    singleton: PromiseOrValue<string>,
    aaModule: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SafeProxy4337> {
    return super.deploy(
      singleton,
      aaModule,
      owner,
      overrides || {}
    ) as Promise<SafeProxy4337>;
  }
  override getDeployTransaction(
    singleton: PromiseOrValue<string>,
    aaModule: PromiseOrValue<string>,
    owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      singleton,
      aaModule,
      owner,
      overrides || {}
    );
  }
  override attach(address: string): SafeProxy4337 {
    return super.attach(address) as SafeProxy4337;
  }
  override connect(signer: Signer): SafeProxy4337__factory {
    return super.connect(signer) as SafeProxy4337__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeProxy4337Interface {
    return new utils.Interface(_abi) as SafeProxy4337Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeProxy4337 {
    return new Contract(address, _abi, signerOrProvider) as SafeProxy4337;
  }
}
